- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
----
c++:
----

done - create the header file.
done - test the invocation of a java method
done - test the creation of the java VM
done - integrate and compile the MyAI2TVClient.cpp class

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
-----
java:
-----

- need to add a notion of being able to stop what it's doing and plan
  for something to happen in the future.
- NTP
- Calendar
- add documentation (ie the WF API)
- add probes
- write the WF functions
- need to check that the change levels, etc WF commands are sent to the 
  right client.

done - client: add the canceling of current download when a missed file happens.
done - add WF
done - ff
done - rw
done - pause
done - play
done - test the invocation of a c++ method
done - integrate and compile the AI2TVClient.java class

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
REDO ai2tv client

- split up the former AI2TV classes.
- create java client
- create c++ client
- NTP (central time server)
- add the workgroup calendar

done create JNI interface
done histogram
done array of equivalent classes.
NA 2-D table -> speed up/slow down, pointer to WF: equivalent
classes are currently (16/3/03) implemented using an on-the-fly
calculation, which is fast enough for our purposes.