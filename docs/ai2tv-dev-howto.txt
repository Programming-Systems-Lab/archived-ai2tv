$RCSfile$ $Revision$ $Date$ $Source$ 

AI2TV 
HOWTO for AI2TV developers.

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-                          Table Of Contents                        -
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

1. Overview
5. Acknowledgements

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-                       1. System Overview                          -
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

AI2TV is a video viewing application that allows for distributed
synchronous viewing sessions.  This document describes the system
relevant to developers.  The latest AI2TV source code should be in
PSL's CVS repository in the ai2tv module.  We use Ant as the build
manager.

The AI2TV client is composed of the Java client (jar file) and Elvin
jar.

The AI2TV server is composed of the HTTP video server, the workgroup
calendar, the workflow server, and Elvin.  The video server is
basically a jpg image server that provides the video frames.  The
workgroup calendar provides the capability of creating video sessions,
and depends on Java (http://java.sun.com).  Elvin (4.02) provides a
publish/subscribe communication layer and is a separate package that
can be downloaded from http://elvin.dstc.edu.au/.  The workflow server
provides an amount of micro-workflow that can give the clients a
higher level of video quality depending on the resources of the client
(this component is optional, see ???[citepaper] for details).  The
workflow server depends on Cougaar (9.6) which can be downloaded from
http://www.cougaar.org.

To summarize, the components are:

1: AI2TV Client
2: HTTP server
3: Elvin
4: Workgroup Calendar
5: Workflow Server

Dependencies: Java 1.4.0+, Elvin, Ant, and Cougaar 9.6. 

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-                         2. AI2TV Client                           -
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-                3. Starting the Workgroup Calendar                 -
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-                  4. Starting the Workflow Server                  -
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-                        5. Acknowledgements                        -
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Copyright (c) 2004, Columbia University, Programming Systems Laboratory

The AI2TV client and workgroup server was written by Dan Phung, the
workflow server was written by Peppo Valetto, Dan Phung and Matias
Pelenur.

The current maintainer of the source code is Dan Phung
(phung@cs.columbia.edu).

We would like to thank John Kender, Tiecheng Liu, and other members of
the High-Level Vision Lab for their assistance in using their
lecture-video semantic compression software.  We would also like to
thank the other members of the Programming Systems Lab, particularly
Matias Pelenur who implemented PSL's Little-JIL interpreter on top of
Workflakes/Cougaar.  Little-JIL was developed by Lee Osterweil's LASER
lab at the University of Massachusetts, Amherst. Cougaar was developed
by a DARPA-funded consortium; our main Cougaar contact was Nathan
Combs of BBN.  Siena was developed by the University of Colorado,
Boulder, in Alex Wolf's SERL lab. PSL is funded in part by National
Science Foundation grants CCR-0203876, EIA-0202063 and EIA-0071954,
and by Microsoft Research.