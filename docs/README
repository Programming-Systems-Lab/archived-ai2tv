$RCSfile$ $Revision$ $Date$ $Source$ 

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
- 1. Description                                                    -
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
This is the VERY alpha version of the AI2TV docs.  Some of the
documentation is still incomplete.  Please email Dan
(phung@cs.columbia.edu) for any questions.

FILENAME		DESCRIPTION
ai2tv-admin-howto.txt	: documentation for administrators of the AI2TV system
ai2tv-user-howto.txt	: documentation for users of the AI2TV system
ai2tv-dev-howto.txt	: documentation for developers for the AI2TV system


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
- 2. Install                                                        -
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
(quick startup)

- install Cougaar, Elvin, and Ant:
http://www.cougaar.org, http://elvin.dstc.edu.au, http://ant.apache.org

- for the sources, set CVSROOT as:  
CVSROOT=:ext:username@church.psl.cs.columbia.edu:/cvs
> cvs checkout psl/ai2tv
> cvs checkout psl/workflakes

in psl/workflakes, you'll find the running.zip needed for
the workflow controller.

SERVER SIDE:
- start up web server (just make sure the directories are all there
  with the AI2TV videos, email Dan for a prepackaged example)

- to make and startup the wgserver, change to the psl/ai2tv/wgserver
> javac -classpath c:/pslroot/jars/elvin.jar;../../../ *.java
> java -classpath c:/pslroot/jars/siena-1.4.3.jar;../../../ psl.ai2tv.wgserver.WGServer ka:localhost:4444

(where ka:localhost:4444 is the url for the elvin server)

- unzip running.zip file, configure the build.properties file, then run: 
> ant makeassets makeassets-ai2tv compile compile-ai2tv
> ant cougaar-run

CLIENT SIDE
- to make the client jar, change to the psl/ai2tv/client
> ant jar

- startup the client (with the ai2tvClient.jar file)
> java -classpath ai2tvClient.jar:c:\pslroot\jars\siena-1.4.3.jar       \
  -Dai2tv.server=ka:localhost:4444  -Dai2tv.baseURL="http://wall/ai2tv" \
  -Dai2tv.level=1 psl.ai2tv.client.Client

(where ai2tv.server points to the Elvin server and ai2tv.baseURL points
 to the HTML-based "video" server.)


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
- 3. Acknowledgements                                               -
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Copyright (c) 2004, Columbia University, Programming Systems Laboratory

We would like to thank John Kender, Tiecheng Liu, and other members of
the High-Level Vision Lab for their assistance in using their
lecture-video semantic compression software.  We would also like to
thank the other members of the Programming Systems Lab, particularly
Matias Pelenur who implemented PSL's Little-JIL interpreter on top of
Workflakes/Cougaar.  Little-JIL was developed by Lee Osterweil's LASER
lab at the University of Massachusetts, Amherst. Cougaar was developed
by a DARPA-funded consortium; our main Cougaar contact was Nathan
Combs of BBN.  Siena was developed by the University of Colorado,
Boulder, in Alex Wolf's SERL lab. PSL is funded in part by National
Science Foundation grants CCR-0203876, EIA-0202063 and EIA-0071954,
and by Microsoft Research.